---
- hosts: db
  become: true
  vars_files:
    - vault_vars.yml  # Laddar in krypterade variabler från vault-fil
  tasks:

    - name: Ensure MariaDB-server is installed.
      ansible.builtin.package:
        name: mariadb-server
        state: present

    - name: Ensure Mariadb is started at boot
      ansible.builtin.service:
        name: mariadb
        enabled: false
        state: started

    - name: Ensure python3-PyMySQL is installed
      ansible.builtin.package:
        name: python3-PyMySQL
        state: present

    - name: Create database 'webappdb'
      community.mysql.mysql_db:
        name: webappdb
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock

    - name: Create database user 'webappuser' with access to webappdb
      community.mysql.mysql_user:
        name: 'webappuser'
        password: "{{ db_password }}"  # Lösenord hämtas säkert från vault-variabeln
        priv: 'webappdb.*:ALL'
        host: '%'
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock

# --------------------------------------------------------------
# Sammanfattning:
#
# Syfte:
# - Samma funktion som tidigare playbook (skapa databas och användare), men
#   nu hanteras lösenordet säkert via Ansible Vault.
#
# Viktigt:
# - Variabeln db_password är krypterad i vault_vars.yml och läses in via vars_files.
# - Användning av ansible-vault förbättrar säkerheten genom att
#   undvika klartextlösenord i playbook eller versionskontroll.
#
# Moduler:
# - ansible.builtin.package för installation av nödvändiga paket.
# - ansible.builtin.service för att starta och konfigurera tjänsten.
# - community.mysql.mysql_db och community.mysql.mysql_user för att hantera MariaDB.
#
# Vault-användning:
# - Vault-filen måste låsas upp vid körning, t.ex. med --ask-vault-pass.
# - Detta möjliggör säker lagring och hantering av känslig information.
# --------------------------------------------------------------
